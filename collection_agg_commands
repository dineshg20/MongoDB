''' This file contains the sample aggregation commands used funtion in MongoDB'''


# Sample data
{ "_id" : 1, "eid" : "1", "modifyDate" : ISODate("2020-01-01T08:00:00Z"), "deptId" : 1, "country" : "IN" }
{ "_id" : 2, "eid" : "2", "modifyDate" : ISODate("2020-02-03T09:00:00Z"), "deptId" : 2, "country" : "US" }
{ "_id" : 3, "eid" : "3", "modifyDate" : ISODate("2020-03-03T09:05:00Z"), "deptId" : 1, "country" : "IN" }
{ "_id" : 4, "eid" : "1", "modifyDate" : ISODate("2020-02-15T08:00:00Z"), "deptId" : 1, "country" : "IN" }
{ "_id" : 5, "eid" : "3", "modifyDate" : ISODate("2020-02-15T09:05:00Z"), "deptId" : 3, "country" : "UK" }
{ "_id" : 6, "eid" : "2", "modifyDate" : ISODate("2020-02-15T12:05:10Z"), "deptId" : 2, "country" : "US" }
{ "_id" : 7, "eid" : "3", "modifyDate" : ISODate("2020-02-15T14:12:12Z"), "deptId" : 3, "country" : "UK" }


# Find the latest records for all the eid

db.collection.aggregate(
   [ 
     { $sort: { eid: 1, modifyDate: 1} },
     {
       $group:
         {
           _id: {eid : "$eid", country : "$country" },
           updatedDate: { $last: "$modifyDate" }
		   
         }
     }, 
   ], 
)


# To avoid the memory, use the disk space to perform aggregated computation

db.collection.aggregate(
   [ 
     { $sort: { eid: 1, modifyDate: 1} },
     {
       $group:
         {
           _id: {eid : "$eid", country : "$country" },
           updatedDate: { $last: "$modifyDate" }
		   
         }
     }, ] }
   ], {allowDiskUse: true}
)


# Store the out put data to the collection

db.collection.aggregate(
   [ 
     { $sort: { eid: 1, modifyDate: 1} },
     {
       $group:
         {
           _id: {eid : "$eid", country : "$country" },
           updatedDate: { $last: "$modifyDate" }
		   
         }
     }, { $out : "out_collection" }
   ], {allowDiskUse: true}
)
